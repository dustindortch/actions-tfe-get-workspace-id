---
author: Dustin Dortch
name: Get TFC/TFE workspace ID by name
description: Get the TFC/TFE workspace ID given its name.

inputs:
  # global flags
  hostname:
    required: false
    description: "The hostname of a Terraform Enterprise installation, if using Terraform Enterprise. Defaults to HCP Terraform (app.terraform.io) if `TF_HOSTNAME` environment variable is not set."
    default: "app.terraform.io"
  token:
    required: false
    description: "The token used to authenticate with HCP Terraform. Defaults to reading `TF_API_TOKEN` environment variable"
    default: ""
  organization:
    required: false
    description: "The name of the organization in HCP Terraform. Defaults to reading `TF_CLOUD_ORGANIZATION` environment variable"
    default: ""
  ## required
  workspace:
    required: true
    description: "The Workspace name that specifies where the run will be executed"

outputs:
  status:
    description: "The result of the operation. Possible values are `Success`, `Error` or `Timeout`"
    value: ${{ steps.get-workspace-id.outputs.status }}
  workspace_id:
    description: The workspace ID given by the provided workspace name.
    value: ${{ steps.get-workspace-id.outputs.workspace_id }}

runs:
  using: composite
  steps:
    - id: get-workspace-id
      name: Get workspace ID
      shell: bash
      run: |
        RESPONSE=$(curl -X GET -s -o response.txt -w "%{response_code}" https://${{ inputs.hostname }}/api/v2/organizations/${{ inputs.organization }}/workspaces/${{ inputs.workspace }} -H 'Content-Type: application/vnd.api+json' -H "Authorization: Bearer ${{ inputs.token }}" 2>&1)
        echo "status=$RESPONSE" >> $GITHUB_OUTPUT
        echo "workspace_id=$(cat response.txt | jq '.data.id' -r)" >> $GITHUB_OUTPUT
        rm response.txt
...
